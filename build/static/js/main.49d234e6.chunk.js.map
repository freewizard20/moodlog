{"version":3,"sources":["firebase.js","components/Nav/SimpleBottomNavigation.js","components/Log/Log.js","components/Stat/VirtualizedList.js","components/Stat/Stat.js","components/Login/LoginScreen.js","components/Nav/ButtonAppBar.js","actions/loginActions.js","components/Login/SignIn.js","components/Login/SignUp.js","App.js","serviceWorker.js","reducers/counter.js","reducers/isLogged.js","reducers/email.js","reducers/allReducer.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","root","width","marginTop","SimpleBottomNavigation","classes","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","label","db","firestore","minWidth","minHeight","title","fontSize","color","buttongroup","margin","submit","display","justifyContent","Log","mood","setMood","description","setDescription","today","Date","toDateString","email","Cookie","get","handleClick","which","console","log","Card","CardContent","Typography","gutterBottom","ButtonGroup","variant","aria-label","Button","onClick","TextField","id","multiline","rows","placeholder","e","target","CardActions","alert","collection","add","timestamp","now","then","docRef","catch","error","moodData","theme","height","minwidth","maxWidth","marginLeft","backgroundColor","palette","background","paper","satisfied","renderRow","props","data","index","style","length","ListItem","button","key","ListItemAvatar","Avatar","ListItemText","primary","secondary","VirtualizedList","setDidrender","useEffect","where","orderBy","limit","querySnapShot","forEach","doc","obj","push","itemSize","itemCount","bullet","transform","pos","marginBottom","content","Stat","LoginScreen","menuButton","marginRight","spacing","flexGrow","ButtonAppBar","cookies","dispatch","useDispatch","loggedIn","AppBar","position","Toolbar","IconButton","edge","type","set","path","expires","window","location","flexDirection","alignItems","avatar","main","form","SignIn","setEmail","password","setPassword","Cookies","Container","CssBaseline","required","fullWidth","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","axios","post","response","loginHandler","Grid","container","item","xs","SignUp","noValidate","action","method","justify","App","exact","Boolean","hostname","match","counterReducer","state","payload","loggedReducer","emailReducer","allReducers","combineReducers","counter","isLogged","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.49d234e6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyBc5Lk2SC08FoMgbR0fNg3xxCY1qRX_i9Q\",\n  authDomain: \"moodlog-9c083.firebaseapp.com\",\n  databaseURL: \"https://moodlog-9c083.firebaseio.com\",\n  projectId: \"moodlog-9c083\",\n  storageBucket: \"moodlog-9c083.appspot.com\",\n  messagingSenderId: \"87404538407\",\n  appId: \"1:87404538407:web:bb1ef0b23621ce2dbefc02\",\n};\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 400,\n    marginTop: 10,\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction component={Link} to=\"/\" label=\"Log\" />\n      <BottomNavigationAction component={Link} to=\"/stat\" label=\"Stats\" />\n    </BottomNavigation>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport firebase from \"../../firebase\";\nimport SimpleBottomNavigation from \"../Nav/SimpleBottomNavigation\";\nimport Cookie from \"universal-cookie\";\n\nconst db = firebase.firestore();\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    minHeight: 350,\n  },\n  title: {\n    fontSize: 14,\n    color: \"black\",\n  },\n  buttongroup: {\n    margin: 12,\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default function Log() {\n  const classes = useStyles();\n  const [mood, setMood] = useState(-1);\n  const [description, setDescription] = useState(\"\");\n  const today = new Date().toDateString();\n  const cookies = new Cookie();\n\n  const email = cookies.get(\"email\");\n\n  const handleClick = (which) => {\n    setMood(which);\n    console.log(which);\n  };\n\n  const handleSubmit = () => {\n    if (mood === -1) alert(\"Select mood!\");\n    else {\n      db.collection(\"mood\")\n        .add({\n          mood: mood,\n          description: description,\n          timestamp: Date.now(),\n          email: email,\n        })\n        .then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n          alert(\"added to database\");\n          // alert(`${mood} ${description}`);\n        })\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <h3>{today}</h3>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Today's Mood\n          </Typography>\n          <ButtonGroup\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"contained primary button group\"\n            className={classes.buttongroup}\n          >\n            <Button\n              color={mood === 0 ? \"secondary\" : \"primary\"}\n              onClick={() => handleClick(0)}\n            >\n              Good\n            </Button>\n            <Button\n              color={mood === 1 ? \"secondary\" : \"primary\"}\n              onClick={() => handleClick(1)}\n            >\n              Soso\n            </Button>\n            <Button\n              color={mood === 2 ? \"secondary\" : \"primary\"}\n              onClick={() => handleClick(2)}\n            >\n              Angry\n            </Button>\n          </ButtonGroup>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Description\n          </Typography>\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Text\"\n            multiline\n            rows={4}\n            placeholder=\"Write Here\"\n            variant=\"outlined\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </CardContent>\n        <CardActions className={classes.submit}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </CardActions>\n      </Card>\n      <SimpleBottomNavigation />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { FixedSizeList } from \"react-window\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport firebase from \"../../firebase\";\nimport Cookie from \"universal-cookie\";\n\nconst db = firebase.firestore();\n\nlet moodData = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 400,\n    minwidth: 400,\n    maxWidth: 300,\n    marginLeft: 0,\n    backgroundColor: theme.palette.background.paper,\n  },\n  satisfied: {\n    color: \"green\",\n  },\n}));\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  //console.log(props);\n  if (index < moodData.length) {\n    if (moodData[index].mood == 0) {\n      return (\n        <ListItem button style={style} key={index}>\n          <ListItemAvatar>\n            <Avatar>\n              <SentimentSatisfiedAltIcon color=\"primary\" />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={moodData[index].description}\n            secondary={new Date(moodData[index].timestamp).toDateString()}\n          />\n        </ListItem>\n      );\n    } else if (moodData[index].mood == 1) {\n      return (\n        <ListItem button style={style} key={index}>\n          <ListItemAvatar>\n            <Avatar>\n              <SentimentDissatisfiedIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={moodData[index].description}\n            secondary={new Date(moodData[index].timestamp).toDateString()}\n          />\n        </ListItem>\n      );\n    } else {\n      return (\n        <ListItem button style={style} key={index}>\n          <ListItemAvatar>\n            <Avatar>\n              <SentimentVeryDissatisfiedIcon color=\"secondary\" />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={moodData[index].description}\n            secondary={new Date(moodData[index].timestamp).toDateString()}\n          />\n        </ListItem>\n      );\n    }\n  } else {\n    return <></>;\n  }\n}\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired,\n};\n\nexport default function VirtualizedList() {\n  const [didrender, setDidrender] = useState(0);\n  const classes = useStyles();\n  const cookies = new Cookie();\n  const email = cookies.get(\"email\");\n\n  useEffect(() => {\n    moodData = [];\n    db.collection(\"mood\")\n      .where(\"email\", \"==\", email)\n      .orderBy(\"timestamp\", \"desc\")\n      .limit(30)\n      .get()\n      .then(function (querySnapShot) {\n        querySnapShot.forEach(function (doc) {\n          // console.log(doc.id, \" // \", doc.data());\n          const obj = {\n            id: doc.id,\n            timestamp: doc.data().timestamp,\n            mood: doc.data().mood,\n            description: doc.data().description,\n          };\n          moodData.push(obj);\n        });\n        setDidrender(1);\n      });\n\n    // db.collection(\"mood\")\n    //   .get()\n    //   .then(function (querySnapshot) {\n    //     querySnapshot.forEach(function (doc) {\n    //       // doc.data() is never undefined for query doc snapshots\n    //       console.log(doc.id, \" => \", doc.data());\n    //       const obj = {\n    //         id: doc.id,\n    //         timestamp: doc.data().timestamp,\n    //         mood: doc.data().mood,\n    //         description: doc.data().description,\n    //       };\n    //       really.push(obj);\n    //     });\n    //     console.log(really);\n    //   });\n  }, []);\n\n  if (moodData.length === 0) {\n    return <h5>Returning data...</h5>;\n  } else {\n    return (\n      <div className={classes.root}>\n        <FixedSizeList\n          height={400}\n          width={300}\n          itemSize={90}\n          itemCount={moodData.length}\n        >\n          {renderRow}\n        </FixedSizeList>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport \"react-calendar/dist/Calendar.css\";\nimport VirtualizedList from \"./VirtualizedList\";\nimport SimpleBottomNavigation from \"../Nav/SimpleBottomNavigation\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    minHeight: 280,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n    color: \"black\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  buttongroup: {\n    margin: 12,\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default function Stat() {\n  const [value, onChange] = useState(new Date());\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <VirtualizedList />\n        </CardContent>\n      </Card>\n      <SimpleBottomNavigation />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./LoginScreen.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login, logout } from \"../../actions/loginActions\";\nimport Cookies from \"universal-cookie\";\n\nfunction LoginScreen() {\n  const [value, setValue] = useState(\"\");\n\n  const isLogged = useSelector((state) => state.isLogged);\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n\n  const changeHandler = (e) => {\n    setValue(e.target.value);\n  };\n\n  useEffect(() => {\n    setValue(cookies.get(\"login\"));\n  }, []);\n\n  if (value === \"s90909\") {\n    cookies.set(\"login\", \"s90909\", {\n      path: \"/\",\n      expires: new Date(2021, 12),\n    });\n    dispatch(login());\n    setValue(\"\");\n  }\n\n  if (!isLogged) {\n    return (\n      <div className=\"Background\">\n        <input value={value} onChange={(e) => changeHandler(e)} type=\"text\" />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport default LoginScreen;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/loginActions\";\nimport { Link } from \"react-router-dom\";\nimport Cookie from \"universal-cookie\";\nimport Cookies from \"universal-cookie\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const cookies = new Cookie();\n  const dispatch = useDispatch();\n\n  let loggedIn = false;\n  if (cookies.get(\"isLoggedIn\") == \"false\") {\n    loggedIn = false;\n  } else {\n    loggedIn = true;\n  }\n\n  const logoutHandler = () => {\n    console.log(\"logout\");\n    dispatch(logout());\n    cookies.set(\"email\", \"\", {\n      path: \"/\",\n      expires: new Date(2021, 12),\n    });\n    cookies.set(\"isLoggedIn\", \"false\", {\n      path: \"/\",\n      expires: new Date(2021, 12),\n    });\n    window.location = \"/signin\";\n  };\n\n  const loginHandler = () => {\n    window.location = \"/signin\";\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {cookies.get(\"isLoggedIn\") === \"false\"\n              ? \"Mood Log\"\n              : cookies.get(\"email\")}\n          </Typography>\n          {loggedIn ? (\n            <Button color=\"inherit\" onClick={logoutHandler}>\n              Log Out\n            </Button>\n          ) : (\n            <Button color=\"inherit\" onClick={loginHandler}>\n              Log In\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export const login = () => {\n  return {\n    type: \"LOGIN\",\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const cookies = new Cookies();\n\n  const loginHandler = (email, password) => {\n    axios\n      .post(\"http://localhost:8080/login\", { email, password })\n      .then((response) => {\n        if (response.data.email === \"passwordincorrect\") {\n          console.log(\"passwordincorrect\");\n        } else if (response.data.email == \"noidfound\") {\n          console.log(\"noidfound\");\n        } else {\n          console.log(\"successfully logged in\");\n          cookies.set(\"email\", response.data.email, {\n            path: \"/\",\n            expires: new Date(2021, 12),\n          });\n          cookies.set(\"isLoggedIn\", \"true\", {\n            path: \"/\",\n            expires: new Date(2021, 12),\n          });\n          window.location = \"/\";\n        }\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"password\"\n          type=\"password\"\n          label=\"password\"\n          name=\"password\"\n          autoComplete=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoFocus\n        />\n        <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => loginHandler(email, password)}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n          </Grid>\n          <Grid item>\n            <Link to=\"/signup\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          action=\"http://localhost:8080/register\"\n          method=\"post\"\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I agree to the terms of service\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Log from \"./components/Log/Log\";\nimport Stat from \"./components/Stat/Stat\";\nimport LoginScreen from \"./components/Login/LoginScreen\";\nimport SimpleBottomNavigation from \"./components/Nav/SimpleBottomNavigation\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ButtonAppBar from \"./components/Nav/ButtonAppBar\";\nimport SignIn from \"./components/Login/SignIn\";\nimport SignUp from \"./components/Login/SignUp\";\nimport Cookie from \"universal-cookie\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const cookies = new Cookie();\n  cookies.set(\"email\", \"\", {\n    path: \"/\",\n    expires: new Date(2021, 12),\n  });\n  cookies.set(\"isLoggedIn\", \"false\", {\n    path: \"/\",\n    expires: new Date(2021, 12),\n  });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* <LoginScreen /> */}\n        <ButtonAppBar />\n        <Switch>\n          <Route path=\"/\" exact component={Log} />\n          <Route path=\"/stat\" exact component={Stat} />\n          <Route path=\"/signin\" exact component={SignIn} />\n          <Route path=\"/signup\" exact component={SignUp} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + action.payload;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","const loggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return true;\n    case \"LOGOUT\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loggedReducer;\n","const emailReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"REGISTER\":\n      return action.payload;\n    default:\n      return \"\";\n  }\n};\n\nexport default emailReducer;\n","import counterReducer from \"./counter\";\nimport loggedReducer from \"./isLogged\";\nimport emailReducer from \"./email\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n  counter: counterReducer,\n  isLogged: loggedReducer,\n  email: emailReducer,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducer from \"./reducers/allReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}